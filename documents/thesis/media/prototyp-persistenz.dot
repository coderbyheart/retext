digraph G {

graph [ rankdir=BT ]
node [ shape=record fontsize=12 ]
edge [ fontsize=10 ]

Base [ label="{Base\n&lt;&lt;abstract&gt;&gt;|+id\l+deletedAt\l}" ]
Element [ label="{Element\n&lt;&lt;abstract&gt;&gt;|+project\l+name\l+parent\l}" ]
Projekt [ label="{Project|+name\l+owner\l+rootContainer\l}" ]
Container [ label="{Container|+childOrder\l}" ]
Textbaustein [ label="{Text|+status\l+type\l+text\l+spellingApproved\l+contentApproved\l+approved\l}" ]
TextTyp [ label="{TextType|+name\l+description\l+fontsize\l+fontname\l+multiline\l}" ]
Benutzer [ label="{User|+email\l+password\l}" ]
Kommentar [ label="{Comment|+project\l+user\l+text\l+createdAt\l}" ]
Version [ label="{TextVersion|+createdAt\l+parent\l+text\l}" ]

# Association
edge [ arrowhead=none color="#999999" ]

# Aggregation
# Aggregation can occur when a class is a collection or container of other classes, but where the contained classes do not have a strong life cycle dependency on the containerâ€”essentially, if the container is destroyed, its contents are not.
# In UML, it is graphically represented as a hollow diamond shape on the containing class end of the tree with lines that connect contained classes to the containing class.
edge [ arrowhead=odiamond ]
Benutzer -> Textbaustein [ taillabel="1" headlabel="0..n" ]
Benutzer -> Kommentar [ taillabel="1" headlabel="0..n" ]
Benutzer -> Projekt [ taillabel="1" headlabel="0..n" ]
TextTyp -> Textbaustein [ taillabel="1" headlabel="0..n" ]

# Composition
# Composition usually has a strong life cycle dependency between instances of the container class and instances of the contained class(es): If the container is destroyed, normally every instance that it contains is destroyed as well. 
# The UML graphical representation of a composition relationship is a filled diamond shape on the containing class end of the tree of lines that connect contained class(es) to the containing class.
edge [ arrowhead=diamond ]
Container -> Container [ taillabel="0..n" headlabel="1" ]
Textbaustein -> Container [ taillabel="0..n" headlabel="1" ]
Container -> Projekt [ taillabel="1..n" headlabel="1" ]
Version -> Textbaustein  [ taillabel="0..n" headlabel="1" ]

# Generalization
node [ shape=point color="#5abbe6" ]

edge [ arrowtail=none arrowhead=onormal color="#5abbe6" fontcolor="#5abbe6" weight=10 headport=s tailport=n ]
Projekt -> Base
Container -> Element
Textbaustein -> Element
Element -> Base
TextTyp -> Base
Version -> Base
Kommentar -> Base
Benutzer -> Base

}
